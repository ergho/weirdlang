---
source: crates/lexer/src/lib.rs
expression: test_lexing(contents)
---
 (Token: Let, Value: "let") 
 (Token: Identifier, Value: "five") 
 (Token: Assign, Value: "=") 
 (Token: Integer, Value: "5") 
 (Token: Semicolon, Value: ";") 
 (Token: Let, Value: "let") 
 (Token: Identifier, Value: "ten") 
 (Token: Assign, Value: "=") 
 (Token: Integer, Value: "10") 
 (Token: Semicolon, Value: ";") 
 (Token: Let, Value: "let") 
 (Token: Identifier, Value: "add") 
 (Token: Assign, Value: "=") 
 (Token: Function, Value: "fn") 
 (Token: LeftParen, Value: "(") 
 (Token: Identifier, Value: "x") 
 (Token: Comma, Value: ",") 
 (Token: Identifier, Value: "y") 
 (Token: RightParen, Value: ")") 
 (Token: LeftBrace, Value: "{") 
 (Token: Identifier, Value: "x") 
 (Token: Plus, Value: "+") 
 (Token: Identifier, Value: "y") 
 (Token: Semicolon, Value: ";") 
 (Token: RightBrace, Value: "}") 
 (Token: Semicolon, Value: ";") 
 (Token: Let, Value: "let") 
 (Token: Identifier, Value: "result") 
 (Token: Assign, Value: "=") 
 (Token: Identifier, Value: "add") 
 (Token: LeftParen, Value: "(") 
 (Token: Identifier, Value: "five") 
 (Token: Comma, Value: ",") 
 (Token: Identifier, Value: "ten") 
 (Token: RightParen, Value: ")") 
 (Token: Semicolon, Value: ";") 
 (Token: ExclamationMark, Value: "!") 
 (Token: Minus, Value: "-") 
 (Token: Division, Value: "/") 
 (Token: Multiplication, Value: "*") 
 (Token: Integer, Value: "5") 
 (Token: Semicolon, Value: ";") 
 (Token: Integer, Value: "5") 
 (Token: LessThan, Value: "<") 
 (Token: Integer, Value: "10") 
 (Token: GreaterThan, Value: ">") 
 (Token: Integer, Value: "5") 
 (Token: Semicolon, Value: ";") 
 (Token: If, Value: "if") 
 (Token: LeftParen, Value: "(") 
 (Token: Integer, Value: "5") 
 (Token: LessThan, Value: "<") 
 (Token: Integer, Value: "10") 
 (Token: RightParen, Value: ")") 
 (Token: LeftBrace, Value: "{") 
 (Token: Return, Value: "return") 
 (Token: True, Value: "true") 
 (Token: Semicolon, Value: ";") 
 (Token: RightBrace, Value: "}") 
 (Token: Else, Value: "else") 
 (Token: LeftBrace, Value: "{") 
 (Token: Return, Value: "return") 
 (Token: False, Value: "false") 
 (Token: Semicolon, Value: ";") 
 (Token: RightBrace, Value: "}") 

